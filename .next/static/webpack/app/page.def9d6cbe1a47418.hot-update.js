"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/google-script.ts":
/*!******************************!*\
  !*** ./lib/google-script.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GOOGLE_SCRIPT_CONFIG: function() { return /* binding */ GOOGLE_SCRIPT_CONFIG; },\n/* harmony export */   fetchFromGoogleScript: function() { return /* binding */ fetchFromGoogleScript; },\n/* harmony export */   validatePatientData: function() { return /* binding */ validatePatientData; }\n/* harmony export */ });\n// Configuración para Google Apps Script\nconst GOOGLE_SCRIPT_CONFIG = {\n    // URL directa (para cuando se configure CORS correctamente)\n    url: \"https://script.google.com/macros/s/AKfycbzTg6wQCsc_sIMBKSk_4vpGcbhrS1kuUiNyPyvtzLsoVktqAhZC-XsLaC-TaGX_rW4d/exec\",\n    timeout: 10000,\n    retries: 3,\n    // Usar datos de ejemplo por defecto hasta que se configure CORS\n    useFallbackData: true\n};\n// Función para hacer peticiones a Google Apps Script\nasync function fetchFromGoogleScript() {\n    const { url, timeout, retries } = GOOGLE_SCRIPT_CONFIG;\n    for(let attempt = 1; attempt <= retries; attempt++){\n        try {\n            console.log(\"Intento \".concat(attempt, \"/\").concat(retries, \" - Cargando datos desde Google Apps Script\"));\n            const controller = new AbortController();\n            const timeoutId = setTimeout(()=>controller.abort(), timeout);\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                signal: controller.signal\n            });\n            clearTimeout(timeoutId);\n            if (!response.ok) {\n                throw new Error(\"Error HTTP: \".concat(response.status, \" - \").concat(response.statusText));\n            }\n            const result = await response.json();\n            console.log(\"Respuesta de Google Apps Script:\", result);\n            // Manejar diferentes formatos de respuesta\n            if (result && Array.isArray(result)) {\n                return result;\n            } else if (result && Array.isArray(result.data)) {\n                return result.data;\n            } else if (result && result.success && Array.isArray(result.data)) {\n                return result.data;\n            } else {\n                console.warn(\"Formato de respuesta inesperado:\", result);\n                throw new Error(\"Formato de datos no reconocido\");\n            }\n        } catch (error) {\n            console.error(\"Error en intento \".concat(attempt, \":\"), error);\n            if (attempt === retries) {\n                throw error;\n            }\n            // Esperar antes del siguiente intento\n            await new Promise((resolve)=>setTimeout(resolve, 1000 * attempt));\n        }\n    }\n    throw new Error(\"Todos los intentos fallaron\");\n}\n// Función para validar datos\nfunction validatePatientData(data) {\n    if (!Array.isArray(data)) return false;\n    return data.every((item)=>item && typeof item === \"object\" && typeof item.patient === \"string\" && typeof item.carrier === \"string\" && typeof item.office === \"string\" && typeof item.paidAmount === \"number\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9nb29nbGUtc2NyaXB0LnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHdDQUF3QztBQUNqQyxNQUFNQSx1QkFBdUI7SUFDbEMsNERBQTREO0lBQzVEQyxLQUFLO0lBQ0xDLFNBQVM7SUFDVEMsU0FBUztJQUNULGdFQUFnRTtJQUNoRUMsaUJBQWlCO0FBQ25CLEVBQUM7QUFVRCxxREFBcUQ7QUFDOUMsZUFBZUM7SUFDcEIsTUFBTSxFQUFFSixHQUFHLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFFLEdBQUdIO0lBRWxDLElBQUssSUFBSU0sVUFBVSxHQUFHQSxXQUFXSCxTQUFTRyxVQUFXO1FBQ25ELElBQUk7WUFDRkMsUUFBUUMsR0FBRyxDQUFDLFdBQXNCTCxPQUFYRyxTQUFRLEtBQVcsT0FBUkgsU0FBUTtZQUUxQyxNQUFNTSxhQUFhLElBQUlDO1lBQ3ZCLE1BQU1DLFlBQVlDLFdBQVcsSUFBTUgsV0FBV0ksS0FBSyxJQUFJWDtZQUV2RCxNQUFNWSxXQUFXLE1BQU1DLE1BQU1kLEtBQUs7Z0JBQ2hDZSxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7Z0JBQ0FDLFFBQVFULFdBQVdTLE1BQU07WUFDM0I7WUFFQUMsYUFBYVI7WUFFYixJQUFJLENBQUNHLFNBQVNNLEVBQUUsRUFBRTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNLGVBQW9DUCxPQUFyQkEsU0FBU1EsTUFBTSxFQUFDLE9BQXlCLE9BQXBCUixTQUFTUyxVQUFVO1lBQ3pFO1lBRUEsTUFBTUMsU0FBUyxNQUFNVixTQUFTVyxJQUFJO1lBQ2xDbEIsUUFBUUMsR0FBRyxDQUFDLG9DQUFvQ2dCO1lBRWhELDJDQUEyQztZQUMzQyxJQUFJQSxVQUFVRSxNQUFNQyxPQUFPLENBQUNILFNBQVM7Z0JBQ25DLE9BQU9BO1lBQ1QsT0FBTyxJQUFJQSxVQUFVRSxNQUFNQyxPQUFPLENBQUNILE9BQU9JLElBQUksR0FBRztnQkFDL0MsT0FBT0osT0FBT0ksSUFBSTtZQUNwQixPQUFPLElBQUlKLFVBQVVBLE9BQU9LLE9BQU8sSUFBSUgsTUFBTUMsT0FBTyxDQUFDSCxPQUFPSSxJQUFJLEdBQUc7Z0JBQ2pFLE9BQU9KLE9BQU9JLElBQUk7WUFDcEIsT0FBTztnQkFDTHJCLFFBQVF1QixJQUFJLENBQUMsb0NBQW9DTjtnQkFDakQsTUFBTSxJQUFJSCxNQUFNO1lBQ2xCO1FBRUYsRUFBRSxPQUFPVSxPQUFPO1lBQ2R4QixRQUFRd0IsS0FBSyxDQUFDLG9CQUE0QixPQUFSekIsU0FBUSxNQUFJeUI7WUFFOUMsSUFBSXpCLFlBQVlILFNBQVM7Z0JBQ3ZCLE1BQU00QjtZQUNSO1lBRUEsc0NBQXNDO1lBQ3RDLE1BQU0sSUFBSUMsUUFBUUMsQ0FBQUEsVUFBV3JCLFdBQVdxQixTQUFTLE9BQU8zQjtRQUMxRDtJQUNGO0lBRUEsTUFBTSxJQUFJZSxNQUFNO0FBQ2xCO0FBRUEsNkJBQTZCO0FBQ3RCLFNBQVNhLG9CQUFvQk4sSUFBVztJQUM3QyxJQUFJLENBQUNGLE1BQU1DLE9BQU8sQ0FBQ0MsT0FBTyxPQUFPO0lBRWpDLE9BQU9BLEtBQUtPLEtBQUssQ0FBQ0MsQ0FBQUEsT0FDaEJBLFFBQ0EsT0FBT0EsU0FBUyxZQUNoQixPQUFPQSxLQUFLQyxPQUFPLEtBQUssWUFDeEIsT0FBT0QsS0FBS0UsT0FBTyxLQUFLLFlBQ3hCLE9BQU9GLEtBQUtHLE1BQU0sS0FBSyxZQUN2QixPQUFPSCxLQUFLSSxVQUFVLEtBQUs7QUFFL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2dvb2dsZS1zY3JpcHQudHM/MWQ0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25maWd1cmFjacOzbiBwYXJhIEdvb2dsZSBBcHBzIFNjcmlwdFxyXG5leHBvcnQgY29uc3QgR09PR0xFX1NDUklQVF9DT05GSUcgPSB7XHJcbiAgLy8gVVJMIGRpcmVjdGEgKHBhcmEgY3VhbmRvIHNlIGNvbmZpZ3VyZSBDT1JTIGNvcnJlY3RhbWVudGUpXHJcbiAgdXJsOiBcImh0dHBzOi8vc2NyaXB0Lmdvb2dsZS5jb20vbWFjcm9zL3MvQUtmeWNielRnNndRQ3NjX3NJTUJLU2tfNHZwR2NiaHJTMWt1VWlOeVB5dnR6THNvVmt0cUFoWkMtWHNMYUMtVGFHWF9yVzRkL2V4ZWNcIixcclxuICB0aW1lb3V0OiAxMDAwMCwgLy8gMTAgc2VndW5kb3NcclxuICByZXRyaWVzOiAzLFxyXG4gIC8vIFVzYXIgZGF0b3MgZGUgZWplbXBsbyBwb3IgZGVmZWN0byBoYXN0YSBxdWUgc2UgY29uZmlndXJlIENPUlNcclxuICB1c2VGYWxsYmFja0RhdGE6IHRydWVcclxufVxyXG5cclxuLy8gVGlwb3MgZGUgcmVzcHVlc3RhIGVzcGVyYWRvc1xyXG5leHBvcnQgaW50ZXJmYWNlIEdvb2dsZVNjcmlwdFJlc3BvbnNlIHtcclxuICBzdWNjZXNzOiBib29sZWFuXHJcbiAgZGF0YT86IGFueVtdXHJcbiAgZXJyb3I/OiBzdHJpbmdcclxuICBtZXNzYWdlPzogc3RyaW5nXHJcbn1cclxuXHJcbi8vIEZ1bmNpw7NuIHBhcmEgaGFjZXIgcGV0aWNpb25lcyBhIEdvb2dsZSBBcHBzIFNjcmlwdFxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hGcm9tR29vZ2xlU2NyaXB0KCk6IFByb21pc2U8YW55W10+IHtcclxuICBjb25zdCB7IHVybCwgdGltZW91dCwgcmV0cmllcyB9ID0gR09PR0xFX1NDUklQVF9DT05GSUdcclxuICBcclxuICBmb3IgKGxldCBhdHRlbXB0ID0gMTsgYXR0ZW1wdCA8PSByZXRyaWVzOyBhdHRlbXB0KyspIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBJbnRlbnRvICR7YXR0ZW1wdH0vJHtyZXRyaWVzfSAtIENhcmdhbmRvIGRhdG9zIGRlc2RlIEdvb2dsZSBBcHBzIFNjcmlwdGApXHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpXHJcbiAgICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gY29udHJvbGxlci5hYm9ydCgpLCB0aW1lb3V0KVxyXG4gICAgICBcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcclxuICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzaWduYWw6IGNvbnRyb2xsZXIuc2lnbmFsXHJcbiAgICAgIH0pXHJcbiAgICAgIFxyXG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKVxyXG4gICAgICBcclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRXJyb3IgSFRUUDogJHtyZXNwb25zZS5zdGF0dXN9IC0gJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApXHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICBjb25zb2xlLmxvZygnUmVzcHVlc3RhIGRlIEdvb2dsZSBBcHBzIFNjcmlwdDonLCByZXN1bHQpXHJcbiAgICAgIFxyXG4gICAgICAvLyBNYW5lamFyIGRpZmVyZW50ZXMgZm9ybWF0b3MgZGUgcmVzcHVlc3RhXHJcbiAgICAgIGlmIChyZXN1bHQgJiYgQXJyYXkuaXNBcnJheShyZXN1bHQpKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdFxyXG4gICAgICB9IGVsc2UgaWYgKHJlc3VsdCAmJiBBcnJheS5pc0FycmF5KHJlc3VsdC5kYXRhKSkge1xyXG4gICAgICAgIHJldHVybiByZXN1bHQuZGF0YVxyXG4gICAgICB9IGVsc2UgaWYgKHJlc3VsdCAmJiByZXN1bHQuc3VjY2VzcyAmJiBBcnJheS5pc0FycmF5KHJlc3VsdC5kYXRhKSkge1xyXG4gICAgICAgIHJldHVybiByZXN1bHQuZGF0YVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUud2FybignRm9ybWF0byBkZSByZXNwdWVzdGEgaW5lc3BlcmFkbzonLCByZXN1bHQpXHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGb3JtYXRvIGRlIGRhdG9zIG5vIHJlY29ub2NpZG8nKVxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgZW4gaW50ZW50byAke2F0dGVtcHR9OmAsIGVycm9yKVxyXG4gICAgICBcclxuICAgICAgaWYgKGF0dGVtcHQgPT09IHJldHJpZXMpIHtcclxuICAgICAgICB0aHJvdyBlcnJvclxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAvLyBFc3BlcmFyIGFudGVzIGRlbCBzaWd1aWVudGUgaW50ZW50b1xyXG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwMCAqIGF0dGVtcHQpKVxyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICB0aHJvdyBuZXcgRXJyb3IoJ1RvZG9zIGxvcyBpbnRlbnRvcyBmYWxsYXJvbicpXHJcbn1cclxuXHJcbi8vIEZ1bmNpw7NuIHBhcmEgdmFsaWRhciBkYXRvc1xyXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVQYXRpZW50RGF0YShkYXRhOiBhbnlbXSk6IGJvb2xlYW4ge1xyXG4gIGlmICghQXJyYXkuaXNBcnJheShkYXRhKSkgcmV0dXJuIGZhbHNlXHJcbiAgXHJcbiAgcmV0dXJuIGRhdGEuZXZlcnkoaXRlbSA9PiBcclxuICAgIGl0ZW0gJiYgXHJcbiAgICB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiZcclxuICAgIHR5cGVvZiBpdGVtLnBhdGllbnQgPT09ICdzdHJpbmcnICYmXHJcbiAgICB0eXBlb2YgaXRlbS5jYXJyaWVyID09PSAnc3RyaW5nJyAmJlxyXG4gICAgdHlwZW9mIGl0ZW0ub2ZmaWNlID09PSAnc3RyaW5nJyAmJlxyXG4gICAgdHlwZW9mIGl0ZW0ucGFpZEFtb3VudCA9PT0gJ251bWJlcidcclxuICApXHJcbn0gIl0sIm5hbWVzIjpbIkdPT0dMRV9TQ1JJUFRfQ09ORklHIiwidXJsIiwidGltZW91dCIsInJldHJpZXMiLCJ1c2VGYWxsYmFja0RhdGEiLCJmZXRjaEZyb21Hb29nbGVTY3JpcHQiLCJhdHRlbXB0IiwiY29uc29sZSIsImxvZyIsImNvbnRyb2xsZXIiLCJBYm9ydENvbnRyb2xsZXIiLCJ0aW1lb3V0SWQiLCJzZXRUaW1lb3V0IiwiYWJvcnQiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsInNpZ25hbCIsImNsZWFyVGltZW91dCIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwicmVzdWx0IiwianNvbiIsIkFycmF5IiwiaXNBcnJheSIsImRhdGEiLCJzdWNjZXNzIiwid2FybiIsImVycm9yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ2YWxpZGF0ZVBhdGllbnREYXRhIiwiZXZlcnkiLCJpdGVtIiwicGF0aWVudCIsImNhcnJpZXIiLCJvZmZpY2UiLCJwYWlkQW1vdW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/google-script.ts\n"));

/***/ })

});